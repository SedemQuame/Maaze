using UnityEngine;
using System.Collections;

/// <summary>
/// Procedural number generator used by the HuntAndKillMazeAlgorithm, 
/// </summary>
public class ProceduralNumberGenerator
{
    public static int currentPosition = 0;
    public static string[] keys = {
        "1441231312313234323212132312334242434324231344441212334432121223344",
        "1141112233224332231411332433133312441144343413134224342241344144314133121334332343314332142421144332",
        "2132342243434141221243132112214233313121313311241324331341333231431344314424112114423432443244414422",
        "3132144242323213233212431344244421432312422132212443144243141442324414334222422222333221412331143231",
        "2113131444424233113414442233134233442222323423133141122221121224321433232414343442113444141332314223",
        "2131324444323134333242124322344132421444343211132434244142242342131223241422211422422332113434442132",
        "2444412441332432412232133332132411132424312122213231223331244342131131211314431343243324313322414313",
        "2321312313323112422211123231214441241224221133413323414334214413424433142212214443412134344332234424",
        "2224222221433112443122234431143123112413414222134134332312224413443142213131122143222432444333441112",
        "1241413143343332442332214242313333113311224411242313442441212142112424221242313324443133213322221234",
        "113323424431113421132331242313132311113113424134424332113211243313133123343343232331213442411233131",
        "2132342232121114314441313221323232121112124124314422222233134341331224422134323143331431312444224212",
        "2431414434342133334244312422422324443112114231133344132111132113233412214124413121132444223411142413",
        "4322341132222443141442341121333244413214344441431422223143143212434344341313423133322214432112143323",
        "3324122211213123433423141143232442444343423212212433121242431112221322224433413143421411233341134222",
        "2223232233232244143234433443343344134341313423422231112331133424314431222443441211432423441122244343",
        "2224233341341213344231313243343321311142214122421311412114143433432112231413334432243123112232443132",
        "3231213112121412244114131241323132143244323312134413424413122432312242413423432423434343313242241222",
        "4223421331442342312223344313431433443413412133241144314132141342131233133244124424124433332211313241",
        "3141212142241212442424414333312223331332441441412311433121431211223214434242441342424233221123311322",
        "2324342334333331322242111131243434441121421223143132131223112223113133134442323132411223444143311131",
        "3312442424324343223143142134442114234444111143414224344144211434111214214124214433231442122344441231",
        "2241433441444422114311241333321413233213333412423111213311411223121433324244414323321242234344143423",
        "2142233412332113121323323311111413211413413213112124112412341311312132411213432221124214123433234243",
        "3332312313123211223244212111221334433123224414444113114434131442424341113144211211321131334322222421",
        "4112424424323124422111122414132124242111214214132132311331333143214412343342413233413342332322213323",
        "4444242422321312112223211424344242442113412341341433244213113122344343434341132142134223344323341131",
        "4442213224111431111414321112142414141322333343442231212332134242243111131112231314221413314111442424",
        "4333222221242324411343232121333334411122433413143211314443132142421434224121441112241323443331343243",
        "3314244321134124323123122341121343221444133242323224232142134334423224343324144131443322233422412131",
        "4223313312231112434342411143342121431434232342131233434333314442214414121232422342413143442343324412",
        "3212333423343424211414211111223332143224433121423324241331444342224121111442221331142212443214134423",
        "1441111434313334123144314122342221444211331243222111123113231211233131311113233234422243344122242421",
        "2242243211423124312212112114131234143443413423132124131134431432213213224144121433311231323322221244",
        "2321421213213134231231411213411333431233421232121114331124343243232232321333441444313241332144243144",
        "4324424344422124434133232444334231123433132313224221324111122222311342134224321433244122124214222422",
        "2144213322243321411122143243424214424343211424114444144312331124442431324312142224312134423131422144",
        "3113144124441243413333243112221331422323141412341232134142244442321142433311222132442314142131314434",
        "4144323124143242232134442232214223233321144131221332113243234311414223124232411332214413413123323312",
        "2124441223421324332121122412143312314112334443243112144222424224223123413214442211224422411211222313",
        "3221233411243232222134343142121212314422144242231124144222441122244213434221423434322333333122323421",
        "3244212433343111214333244424422214434133213411412432224434312412311111133422411342312432234421323443",
        "3341213141331242121322123113322442332122213112143423321423432423323223242433221422423424221144322233",
        "3233444212413241114341321114432314123141211342344421132421334223342313123433321434323121344331221213",
        "1331413141324234422214342124431121113444121224144132211112314432231233124344343144214343431241432322",
        "1224324421122412433313241243414212211233341121321134134321323333122144321342124141442121414244234341",
        "2112343431433411314141134223111321114113443334334332144213113241431134221411411211243231342224323431",
        "2231333441211111434311144112134314324433423141422244132323412344213241114111433321141241343211223321",
        "2213321112222431242132414311112422443242444244412224312213332423244332122313333213322422244443242442",
        "2422421142411132313331213413324124311124331234231113422224242214431234221134411223414443214223221441",
        "414313233423133133132122142133431344334314242412324243311223133443232433211413334334431444342113222"
    };
    

    public static int GetNextNumber()
    {
        int choosenKeyIndex = Random.Range(0, keys.Length);
        string currentNum = keys[choosenKeyIndex].Substring(currentPosition++ % keys[choosenKeyIndex].Length, 1);
        return int.Parse(currentNum);
    }
}
